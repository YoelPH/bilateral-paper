---
title: "Probabilistic Model of Bilateral Lymphatic Spread in Head and Neck Cancer"
authors:
  - name: Roman Ludwig
    orcid: 0000-0001-9434-328X
    email: roman.ludwig@usz.ch
  - name: Yoel Perez Haas
    email: yoel.perezhaas@usz.ch
  - name: Jan Unkelbach
    orcid: 0000-0002-4275-990X
    email: jan.unkelbach@usz.ch
bibliography: references.bib
format:
  html:
    toc: true
    toc-depth: 3
    code-fold: true
  pdf:
    keep-tex: true
    include-in-header:
    - text: |
        \usepackage{multirow}
        \usepackage{centernot}
jupyter: python3
execute: 
  cache: true
crossref:
  fig-prefix: "figure"
  tbl-prefix: "table"
  eq-prefix: "equation"
  sec-prefix: "section"
code-links:
  - text: GitHub Repo
    href: https://github.com/rmnldwg/bilateral-paper
    icon: github
resources: 
  - data/reduced.csv
meca-bundle: true
---

```{python}
#| echo: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import ticker
from matplotlib.colors import LinearSegmentedColormap
import upsetplot

from lymph import models
from lyscripts import utils
from lyscripts.plot.utils import COLORS

from scripts import shared, paths, COL, CONTRA_LNLS

midline_model = shared.get_model("midline", load_samples=True)
```

```{python}
#| tags: [parameters]
#| echo: false

# width of figures. May depend on number of text columns
full = 17 # cm
half = full
# half =  8 # cm
```

# Introduction

- blabla
- head and neck cancer spreads through the lymphatic network
- may sometimes spread to contralateral side
- spreads more frequently and to larger extent contralaterally when tumor extends the mid-sagittal line
- we describe a model based on previously published hidden Markov model
- we extend it to cover the contralateral side, too
- naive approach: make two independent models for each side, but that is not supported by the data
- ipsi- and contralateral side are correlated via time of diagnosis, which is correlated with T-category
- tumor extension over mid-sagittal line is modelled as random variable
- spread probabilities from tumor to contralateral LNLs in case of midline extesnion are linear combinations of these probabilities in case of ipsilateral spread and contralateral spread when tumor is clearly lateralized


# Unilateral Model for Lymphatic Progression {#sec-unilateral}

- what we previously did

$$
P \left( \mathbf{X} \mid \mathbf{Z} \right) = \frac{P \left( \mathbf{Z} \mid \mathbf{X} \right) P \left( \mathbf{X} \right)}{P \left( \mathbf{Z} \right)}
$$ {#eq-uni-bayes-law}

Let us for later use define the matrices $\boldsymbol{\Lambda}$:

$$
\boldsymbol{\Lambda} = P \left( \mathbf{X} \mid \mathbf{t} \right) = \begin{pmatrix}
\boldsymbol{\pi}^\intercal \cdot \mathbf{A}^0 \\
\boldsymbol{\pi}^\intercal \cdot \mathbf{A}^1 \\
\vdots \\
\boldsymbol{\pi}^\intercal \cdot \mathbf{A}^{t_\text{max}} \\
\end{pmatrix}
$$ {#eq-lambda-matrix}

The $n$-th row in this matrix corresponds to the distribution over hidden states after $t=n-1$ time-steps.


# Extension to a Bilateral Model

A naive approach to model the contralateral lymphatic spread would be to simply employ two independent unilateral models as introduced in @sec-unilateral. During training, one could even enforce some shared parameters between these two models, like the parameterization of the distributions over diagnose times or the spread among the LNLs. Additionally, we could think of an approach to incorporate the primary tumor's mid-sagittal extension as a risk factor.

However, this approach lacks a way to describe the correlation between ipsi- and contralateral involvement. This is displayed in @tbl-contra and shows how often the contralateral LNLs I, II, III, and IV were involved, given all possible combinations of midline extension, T-category, and ipsilateral LNL III involvement. Unsurprisingly, the prevalence for contralateral involvement is consistently higher when the tumor extends over the mid-sagittal line or is of later T-category. But it is also more frequent when the ipsilateral side shows more severe involvement, which is here shown via the surrogate LNL III.

```{python}
#| echo: false
#| label: tbl-contra
#| tbl-cap: Contralateral involvement depending on whether the primary tumor extends over the mid-sagittal line, the T-category, and whether the ipsilateral LNL III was involved or healthy.
def right_align(column) -> str:
  """Right align some columns."""
  return ["text-align: right"] * len(column)

data = pd.read_csv(paths.data, header=[0,1,2])
data[COL.t_stage] = data[COL.t_stage].apply(lambda x: "early" if x <= 2 else "late")
early_midext_data = (data.loc[data[COL.t_stage] == "early", COL.midext] == True).mean()
late_midext_data = (data.loc[data[COL.t_stage] == "late", COL.midext] == True).mean()
grouped = data.groupby(by=[COL.midext, COL.t_stage, COL.ipsi_III])

total = grouped.count()[CONTRA_LNLS]["max_llh", "contra"]
idx = total.index.rename(["Mid. ext.", "T-cat.", "ipsi III"])

num_involved = grouped.sum()[CONTRA_LNLS]["max_llh", "contra"]
percent_involved = num_involved / total
total.index = idx
num_involved.index = idx
percent_involved.index = idx

involved = num_involved.join(
  100 * percent_involved,
  rsuffix=" (%)",
).sort_index(axis="columns")
involved.columns = pd.MultiIndex.from_product(
  [["I", "II", "III", "IV"],
   ["n", "%"]],
  names=["LNL", ""]
)
(
  involved.style
  .format(precision=2)
  .apply(right_align, axis="index")
)
```


Thus, we attempt to extend the formalism in @sec-unilateral in such a way that the model's ipsi- and contralateral side evolve synchronously. To achieve that, we start by writing down the posterior distribution of involvement an analogy to @eq-uni-bayes-law, which is now a joint probability of an involvement $\mathbf{X}^\text{i}$ ipsilaterally *and* an involvement $\mathbf{X}^\text{c}$ contralaterally, given a diagnosis of the ipsilateral LNLs $\mathbf{Z}^\text{i}$ and of the contralateral ones $\mathbf{Z}^\text{c}$:

$$
P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \mid \mathbf{Z}^\text{i}, \mathbf{Z}^\text{c} \right) = \frac{P \left( \mathbf{Z}^\text{i}, \mathbf{Z}^\text{c} \mid \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \right) P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \right)}{P \left( \mathbf{Z}^\text{i}, \mathbf{Z}^\text{c} \right)}
$$

The likelihood of the diagnoses given a hidden state simply factorise: $P \left( \mathbf{Z}^\text{i}, \mathbf{Z}^\text{c} \mid \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \right) = P \left( \mathbf{Z}^\text{i} \mid \mathbf{X}^\text{i} \right) \cdot P \left( \mathbf{Z}^\text{c} \mid \mathbf{X}^\text{c} \right)$. And the two factors are contained in the observation matrices $\mathbf{B}^\text{i}$ and $\mathbf{B}^\text{c}$.

The term representing the model's prior probability of hidden involvement does not factorize. However, if we assume that lymphatic spread typically does not cross the mid-sagittal line, we can write it as a factorising sum:

$$
\begin{aligned}
P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \right) &= \sum_{t=0}^{t_\text{max}} P(t) \cdot P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c} \mid t \right) \\
&= \sum_{t=0}^{t_\text{max}} P(t) \cdot P \left( \mathbf{X}^\text{i} \mid t \right) \cdot P \left( \mathbf{X}^\text{c} \mid t \right)
\end{aligned}
$$ {#eq-bilateral-marginal}

This assumption makes intuitive sense: The two sides of the lymphatic network in a typical patient are approximately mirror images of each other. Thus, no major vessels cross the mid-sagittal line. There may, however, be diffusion of lymph fluid accross this line or bulky involvement that redirects lymphatic drainage significantly.

Using this assumption along with @eq-lambda-matrix, we can write the above distribution algebraically as a product:

$$
P \left( \mathbf{X}^\text{i} = \boldsymbol{\xi}_n, \mathbf{X}^\text{c} = \boldsymbol{\xi}_m \right) = \left[ \boldsymbol{\Lambda}^\intercal_\text{i} \cdot \operatorname{diag} P(\mathbf{t}) \cdot \boldsymbol{\Lambda}_\text{c} \right]_{n,m}
$$ {#eq-bilateral-marginal-algebra}


## Incorporating Midline Crossing

To account for the increased prevalence of involvement on the contralateral side when the tumor is not clearly lateralized anymore, we also model the tumor's extension over the mid-sagittal line as a binary random variable. It starts lateralized and at every time-step there is a finite probability $p_\epsilon$ that the tumor grows over the symmetry plane of the patient.

Technically, the introduction of this additional random variable doubles the space of the hidden states and therefore quadruples the size of the transition matrix $\mathbf{A}$. However, since we assume no correlation between the tumor's lateralization and the metastases in the LNLs, we can evolve the two parts separately.

The probabilities to find a patient with a clearly lateralized tumor or one that extends over the mid-sagittal line after $t$ time-steps are then given by

$$
\begin{aligned}
P(\epsilon = \texttt{False} \mid t) &= (1 - p_\epsilon)^t \\
P(\epsilon = \texttt{True} \mid t) &= 1 - (1 - p_\epsilon)^t
\end{aligned}
$$

To get the joint probability over the ipsi- and contralateral hidden states, as well as the state of the tumor's midline extension $P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c}, \epsilon \right)$, we simply add the above terms to the marginalization in @eq-bilateral-marginal:

$$
P \left( \mathbf{X}^\text{i}, \mathbf{X}^\text{c}, \epsilon \right) = \sum_{t=0}^{t_\text{max}} P(t) \cdot P(\epsilon \mid t) \cdot P \left( \mathbf{X}^\text{i} \mid t \right) \cdot P \left( \mathbf{X}^\text{c} \mid t \right)
$$

Again, this can be written algebraically, by defining the vector $P(\mathbf{t}, \epsilon) = P(\mathbf{t}) \cdot P(\epsilon \mid \mathbf{t})$, to achieve the same form as in @eq-bilateral-marginal-algebra:

$$
P \left( \mathbf{X}^\text{i} = \boldsymbol{\xi}_n, \mathbf{X}^\text{c} = \boldsymbol{\xi}_m, \epsilon \right) = \left[ \boldsymbol{\Lambda}^\intercal_\text{i} \cdot \operatorname{diag} P(\mathbf{t}, \epsilon) \cdot \boldsymbol{\Lambda}_\text{c} \right]_{n,m}
$$

In @fig-midext-evo, we visualize how the prior distribution over diagnose times $P(t)$, the conditional probability of midline extension $P(\epsilon \mid t)$, and their joint $P(\epsilon, t)$ evolve over the course of a patient evolution.

```{python}
#| echo: false
#| label: fig-midext-evo
#| fig-cap: The evolution of the probability for the tumor to remain lateralized (green) or to cross the mid-sagittal plane (red).
t = np.linspace(0, 10, 11)
p_midline = {
  "lateralized": (1 - midline_model.midext_prob)**t,
  "extension": 1 - (1 - midline_model.midext_prob)**t,
}
dist = {
  "early": midline_model.get_distribution("early").pmf,
  "late": midline_model.get_distribution("late").pmf,
}
p_colors = {"lateralized": COLORS["green"], "extension": COLORS["red"]}
t_colors = {"early": COLORS["blue"], "late": COLORS["orange"]}
markers = {}

nrows, ncols = 2, 1
plt.rcParams.update(shared.get_fontsizes())
plt.rcParams.update(shared.get_figsizes(
  nrows=nrows,
  ncols=ncols,
  width=half,
  aspect_ratio=2.5,
))

fig, axes = plt.subplots(nrows=nrows, ncols=ncols, sharex=True)
w = 0.3

for label, p in p_midline.items():
  axes[0].plot(
    t, p_midline[label], "o-",
    label=label,
    color=p_colors[label],
  )
  for i, t_stage in enumerate(["early", "late"]):
    if label == "lateralized":
      axes[0].bar(
        t + i*w - w/2, dist[t_stage],
        color=t_colors[t_stage],
        width=w,
        label=f"{t_stage} T-cat.",
      )
    axes[1].plot(
      t, p * dist[t_stage], "o-",
      c=p_colors[label],
      mfc=t_colors[t_stage],
      mec=t_colors[t_stage],
      label=f"{label}, {t_stage}",
    )

axes[0].set_ylim(0., 1.)
axes[0].yaxis.set_major_formatter(ticker.StrMethodFormatter("{x:.0%}"))
axes[0].set_ylabel("probability")
axes[0].grid(axis="y", color=COLORS["gray"], alpha=0.5)

axes[0].legend()

axes[1].set_xlim(min(t), max(t))
axes[1].set_xticks(t)
axes[1].set_xlabel("time-step $t$")

axes[1].set_ylim(0., 0.25)
axes[1].yaxis.set_major_formatter(ticker.StrMethodFormatter("{x:.0%}"))
axes[1].set_ylabel("probability")
axes[1].grid(axis="y", color=COLORS["gray"], alpha=0.5)

axes[1].legend()

plt.show()
```


## Parameter Symmetries

In general, the matrices $\boldsymbol{\Lambda}_\text{i}$ and $\boldsymbol{\Lambda}_\text{c}$ could be parameterized using a disjoint set of parameters. I.e., the ipsi- and contralateral spread rates are entirely different. However, using two sensible assumptions, we can reduce the parameter space by sharing some parameters between the sides:

1. We assume the spread *among* the LNLs to be same on both sides. It is reasonable to assume the lymphatic system is symmetric. Thus, the spread rates from one LNL to the other should be symmetric, too. Formally, this means \
   $$
   \begin{aligned}
   b_v^\text{c} &\neq b_v^\text{i} \\
   t_{rv}^\text{c} &= t_{rv}^\text{i}
   \end{aligned}
   $$ {#eq-symmetries}
   for all $v \leq V$ and $r \in \operatorname{pa}(v)$.
2. The tumor's spread to the contralateral side in case of an extension over the midline is larger than if it was clearly lateralized, but smaller than its spread to the ipsilateral side. This assumption stems from a simple thought experiment: Consider moving the tumor from a clearly lateralized position accross the mid-sagittal plane to its mirror position. In the beginning we would have $b_v^\text{c} < b_v^\text{i}$, while in the end, the situation is reversed. If a tumor extends over the mid-sagittal line, its contralateral spread rate can be expected to be in between these two extremes. We encode this in a *mixing parameter* $\alpha$ that captures a "degree of asymmetry": \
   $$
   b_v^\text{c,e} = \alpha \cdot b_v^\text{i} + (1 - \alpha) \cdot b_v^{\text{c},\centernot{\text{e}}}
   $$ {#eq-mixing}


## Tumors Extending Over the Mid-Sagittal Line

- higher prevalence of contralateral involvement when tumor crosses the mid-sagittal plane
- but still lower than on ipsilateral side
- spread to contralateral side in case of midline extension may be describes as linear combination of ipsi- and contralateral spread in case of no midline extension.
- only one additional "mixing parameter" $\alpha$
- tumor's midline extension modelled as a binary RV (lateralized or crossing/extending)


# Detailed Data on Lymphatic Involvement

To train our models, we used detailed tabular data specifying the lymphatic involvement of individual patients on a per LNL basis.

```{python}
#| echo: false
#| label: fig-data-upset
#| fig-cap: Upset plot of the ipsilateral lymphatic involvement patterns [@lex_upset_2014]. Here, the horizontal bars depict the overall prevalence of LNL involvemen. I.e., LNL II is the only level that is involved in more than 500 patients. The vertical bar plots depict joint involvements. E.g., the fourth bar from the left depicts how often the LNLs II, III, and IV are jointly involved while level I and V are not. This is indicated by the light and dark shaded dots in the matrix underneath.
#| warning: false
lnls = ["I", "II", "III", "IV", "V"]

indicator_data = upsetplot.from_indicators(lnls, data=data["max_llh", "ipsi"])
upset = upsetplot.UpSet(
  indicator_data,
  sort_by="cardinality",
  sort_categories_by="-input",
  min_subset_size=10,
  facecolor=COLORS["blue"],
)
upset.style_subsets(absent=lnls, facecolor=COLORS["green"], label="N0 (all healthy)")
axes = upset.plot()
axes["totals"].set_xlabel("Prevalence")
axes["intersections"].set_ylabel("Scenario size")
plt.show()
```


# Results

```{python}
#| echo: false
#| label: fig-burnin-history 
#| fig-cap: Monitoring quantities during the burn-in phase of the parameter sampling.
from collections import namedtuple

def custom(x, pos):
  return "{:.1f}".format(x/1000)

nrows, ncols = 1, 3
label_map = {
  "acor_times": "autocorrelation [steps]",
  "accept_fracs": "acceptance fraction [%]",
  "max_log_probs": r"max. log-likelihood [$\times 10^3$]",
}

plt.rcParams.update(shared.get_fontsizes())
plt.rcParams.update(shared.get_figsizes(
  nrows=nrows,
  ncols=ncols,
  aspect_ratio=1.,
  width=full,
))

fig, axes = plt.subplots(
  nrows=nrows,
  ncols=ncols,
  sharex=True,
)

for model in ["ipsi", "contra", "bilateral", "midline"]:
  history = pd.read_csv(f"models/{model}/history.csv").set_index("steps")
  for i, column in enumerate(history.columns):
    history.plot(y=column, ax=axes[i], label=model)
    axes[i].autoscale(enable=True, tight=True, axis="x")
    axes[i].set_ylabel(label_map[column])
    axes[i].xaxis.set_major_formatter(ticker.FuncFormatter(custom))
    axes[i].set_xlabel(r"steps [$\times 10^3$]")

axes[1].yaxis.set_major_formatter(ticker.StrMethodFormatter("{x:.0%}"))
axes[2].yaxis.set_major_formatter(ticker.FuncFormatter(custom))
plt.show()
```

@Fig-burnin-history is only a temporary placeholder for now.

## Prevalence Comparisons

Below we compare the predicted with the observed prevalence of some involvement patterns.

```{python}
#| echo: false
#| label: fig-prevalences
#| fig-cap: Prevalences of different scenarios.
from lyscripts.scenario import Scenario
from lyscripts.plot.utils import draw, BetaPosterior, Histogram, COLORS

model = shared.get_model(which="midline")
scenarios_config = utils.load_yaml_params("scenarios.yaml")
scenarios = Scenario.list_from_params(scenarios_config)

plt.rcParams.update(shared.get_fontsizes())
plt.rcParams.update(shared.get_figsizes(aspect_ratio=2., width=half))

fig, ax = plt.subplots()

content = []
content += [
  Histogram.from_hdf5(
    filename=paths.get_filename(model="midline", kind="prevalences"),
    dataname=scenarios[0].md5_hash("prevalences"),
    color=COLORS["blue"],
  ),
  BetaPosterior.from_hdf5(
    filename=paths.get_filename(model="midline", kind="prevalences"),
    dataname=scenarios[0].md5_hash("prevalences"),
    color=COLORS["blue"],
  ),
]

content += [
  Histogram.from_hdf5(
    filename=paths.get_filename(model="midline", kind="prevalences"),
    dataname=scenarios[1].md5_hash("prevalences"),
    color=COLORS["orange"],
  ),
  BetaPosterior.from_hdf5(
    filename=paths.get_filename(model="midline", kind="prevalences"),
    dataname=scenarios[1].md5_hash("prevalences"),
    color=COLORS["orange"],
  ),
]
draw(
  axes=ax,
  contents=content,
  percent_lims=(2., 2.),
)
```


## Parameter Estimates

```{python}
#| echo: false
#| label: tbl-midline-params
#| tbl-cap: Mean sampled parameter estimates of the midline model and the respective standard deviation.
model = shared.get_model(which="midline", load_samples=True)
samples = shared.get_samples(which="midline")

names = list(model.get_params().keys())
means, stds = samples.mean(axis=0), samples.std(axis=0)

early_midext_prob = model.state_dist(t_stage="early")[1].sum()
late_midext_prob = model.state_dist(t_stage="late")[1].sum()

params_table = pd.DataFrame({"name": names, "mean": means, "std": stds})
(
  params_table.style
  .format("{:.2%}", subset=["mean", "std"])
  .apply(right_align, subset=["mean", "std"])
  .hide()
)
```

The predicted prevalence of midline extension for early T-category tumors is <!-- insert computational code later -->. For a late T-category tumor, it is <!-- insert computational code later -->.

In the data, the prevalence of midline extension for early T-category tumors is <!-- insert computational code later -->. For late T-category tumors it is <!-- insert computational code later -->.

- Discrepancy between data and model is due to late T-stage's time prior
- still tied to other parameters
- cannot fully represent spread of midline extension and also represent spread params


## Distributions over States

```{python}
plt.rcdefaults()

mi = pd.MultiIndex.from_product(
  [[False, True]] * len(midline_model.ext.ipsi.graph.lnls),
  names=midline_model.ext.ipsi.graph.lnls.keys(),
)
series = pd.Series(midline_model.ext.ipsi.state_dist(), index=mi)
upsetplot.plot(series)
plt.show()
```
